{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "vector_QMARK_"
          },
          "imported": {
            "type": "Identifier",
            "name": "isVector"
          }
        }
      ],
      "source": {
        "type": "StringLiteral",
        "value": "lfjs-runtime/lang"
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "filter"
          },
          "imported": {
            "type": "Identifier",
            "name": "filter"
          }
        }
      ],
      "source": {
        "type": "StringLiteral",
        "value": "lfjs-runtime/transducers"
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "local": {
            "type": "Identifier",
            "name": "odd_QMARK_"
          },
          "imported": {
            "type": "Identifier",
            "name": "isOdd"
          }
        }
      ],
      "source": {
        "type": "StringLiteral",
        "value": "lfjs-runtime/math"
      }
    },
    {
      "type": "VariableDeclaration",
      "kind": "const",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "a"
          },
          "init": {
            "type": "ArrayExpression",
            "elements": []
          }
        }
      ]
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "vector_QMARK_"
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "a"
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "filter"
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "odd_QMARK_"
          },
          {
            "type": "Identifier",
            "name": "a"
          }
        ]
      }
    }
  ],
  "directives": []
}